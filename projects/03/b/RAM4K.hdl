// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel[0]=address[9], sel[1]=address[10], 
             sel[2]=address[11], a=a, b=b, c=c, d=d, e=e, f=f,
             g=g, h=h);
    RAM512(in=in, address[0]=address[0], address[1]=address[1],
          address[2]=address[2], address[3]=address[3],
          address[4]=address[4], address[5]=address[5],
          address[6]=address[6], address[7]=address[7],
          address[8]=address[8], 
          load=a, out=aout);
    RAM512(in=in, address[0]=address[0], address[1]=address[1],
          address[2]=address[2], address[3]=address[3],
          address[4]=address[4], address[5]=address[5],
          address[6]=address[6], address[7]=address[7],
          address[8]=address[8], 
          load=b, out=bout);
    RAM512(in=in, address[0]=address[0], address[1]=address[1],
          address[2]=address[2], address[3]=address[3],
          address[4]=address[4], address[5]=address[5],
          address[6]=address[6], address[7]=address[7],
          address[8]=address[8], 
          load=c, out=cout);
    RAM512(in=in, address[0]=address[0], address[1]=address[1],
          address[2]=address[2], address[3]=address[3],
          address[4]=address[4], address[5]=address[5],
          address[6]=address[6], address[7]=address[7],
          address[8]=address[8], 
          load=d, out=dout);
    RAM512(in=in, address[0]=address[0], address[1]=address[1],
          address[2]=address[2], address[3]=address[3],
          address[4]=address[4], address[5]=address[5],
          address[6]=address[6], address[7]=address[7],
          address[8]=address[8], 
          load=e, out=eout);
    RAM512(in=in, address[0]=address[0], address[1]=address[1],
          address[2]=address[2], address[3]=address[3],
          address[4]=address[4], address[5]=address[5],
          address[6]=address[6], address[7]=address[7],
          address[8]=address[8], 
          load=f, out=fout);
    RAM512(in=in, address[0]=address[0], address[1]=address[1],
          address[2]=address[2], address[3]=address[3],
          address[4]=address[4], address[5]=address[5],
          address[6]=address[6], address[7]=address[7],
          address[8]=address[8], 
          load=g, out=gout);
    RAM512(in=in, address[0]=address[0], address[1]=address[1],
          address[2]=address[2], address[3]=address[3],
          address[4]=address[4], address[5]=address[5],
          address[6]=address[6], address[7]=address[7],
          address[8]=address[8], 
          load=h, out=hout);
    Mux8Way16(a=aout, b=bout, c=cout, d=dout, e=eout,
              f=fout, g=gout, h=hout, sel[0]=address[9],
              sel[1]=address[10], sel[2]=address[11], out=out);
}
